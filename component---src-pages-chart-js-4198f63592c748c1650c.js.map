{"version":3,"sources":["webpack:///./src/pages/Title.js","webpack:///./src/pages/Chart.js","webpack:///./node_modules/@material-ui/core/esm/styles/withStyles.js","webpack:///./node_modules/@material-ui/core/esm/utils/helpers.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Title","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2__","props","a","createElement","component","variant","color","gutterBottom","children","propTypes","PropTypes","node","Chart","recharts__WEBPACK_IMPORTED_MODULE_1__","_Title__WEBPACK_IMPORTED_MODULE_2__","createData","time","amount","data","Fragment","margin","top","right","bottom","left","dataKey","angle","position","style","textAnchor","type","stroke","dot","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__","_defaultTheme__WEBPACK_IMPORTED_MODULE_2__","stylesOrCreator","options","Object","defaultTheme","capitalize","createChainedFunction","string","charAt","toUpperCase","slice","_len","arguments","length","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","apply","this","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_utils_helpers__WEBPACK_IMPORTED_MODULE_6__","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","forwardRef","ref","_props$align","align","classes","className","_props$color","_props$display","display","_props$gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","theme","_props$variantMapping","variantMapping","other","Component","root","concat","typography","caption","button","overline","srOnly","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","withTheme"],"mappings":"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","file":"component---src-pages-chart-js-4198f63592c748c1650c.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h1\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer\n} from \"recharts\";\nimport Title from \"./Title\";\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData(\"周一\", 80),\n  createData(\"周二\", 300),\n  createData(\"周三\", 240),\n  createData(\"周四\", 540),\n  createData(\"周五\", 550),\n  createData(\"周六\", 300),\n  createData(\"周日\", 240)\n];\n\nexport default function Chart() {\n  return (\n    <React.Fragment>\n      <Title>本周学习时长</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24\n          }}\n        >\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position=\"left\" style={{ textAnchor: \"middle\" }}>\n              时长 (分钟)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#556CD6\" dot={true} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport { withStyles as withStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction withStyles(stylesOrCreator, options) {\n  return withStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default withStyles;","import warning from 'warning'; // It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\n\nexport function capitalize(string) {\n  if (process.env.NODE_ENV !== 'production' && typeof string !== 'string') {\n    throw new Error('Material-UI: capitalize(string) expects a string argument.');\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\n\nexport function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(typeof func === 'function', 'Material-UI: invalid Argument Type, must only provide functions, undefined, or null.') : void 0;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `align=\"nowrap\"`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      theme = props.theme,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"theme\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with an ellipsis.\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * We are empirically mapping the variant property to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` property.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography',\n  withTheme: true\n})(Typography);"],"sourceRoot":""}